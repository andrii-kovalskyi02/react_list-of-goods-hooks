{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","LENGTH","a","b","length","NONE","reverse","App","useState","setSortType","setIsReversed","isSorted","handleClick","type","className","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,SACZD,EAAaE,OACb,MAEF,KAAKR,EAASS,OACZH,EAAaE,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAG3C,KAAKZ,EAASa,MAShB,OAJIR,GACFC,EAAaQ,UAGRR,G,SAnCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAMe,EAAgB,WAC3B,MAAgCC,mBAAShB,EAASa,MAAlD,mBAAOT,EAAP,KAAiBa,EAAjB,KACA,EAAoCD,oBAAS,GAA7C,mBAAOX,EAAP,KAAmBa,EAAnB,KACMC,EAAWf,IAAaJ,EAASa,MAAQR,EAEzCe,EAAc,SAACC,GACnBJ,EAAYI,IAGd,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACED,KAAK,SACLC,UAAWC,IACT,iBACA,CAAE,WAAYnB,IAAaJ,EAASO,WAEtCiB,QAAS,kBAAMJ,EAAYpB,EAASO,WANtC,iCAWA,wBACEc,KAAK,SACLC,UAAWC,IACT,oBACA,CAAE,WAAYnB,IAAaJ,EAASS,SAEtCe,QAAS,kBAAMJ,EAAYpB,EAASS,SANtC,4BAWA,wBACEY,KAAK,SACLC,UAAWC,IACT,oBACA,CAAE,YAAalB,IAEjBmB,QAAS,kBAAMN,GAAeb,IANhC,qBAWCc,GACC,wBACEE,KAAK,SACLC,UAAU,4BACVE,QAAS,WACPP,EAAYjB,EAASa,MACrBK,GAAc,IALlB,sBAaJ,6BACGhB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CoB,KAAI,SAAAC,GAAI,OACP,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCnHrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2372440f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort();\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const isSorted = sortType !== SortType.NONE || isReversed;\n\n  const handleClick = (type: SortType) => {\n    setSortType(type);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => handleClick(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => handleClick(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {isSorted && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortType(SortType.NONE);\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n          .map(good => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}